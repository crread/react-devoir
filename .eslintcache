[{"D:\\projet web\\tp_react\\src\\index.js":"1","D:\\projet web\\tp_react\\src\\App.js":"2","D:\\projet web\\tp_react\\src\\reportWebVitals.js":"3","D:\\projet web\\tp_react\\src\\DisplayListCities\\DisplayListCities.js":"4","D:\\projet web\\tp_react\\src\\Home\\Home.js":"5","D:\\projet web\\tp_react\\src\\Routeur\\Routeur.js":"6","D:\\projet web\\tp_react\\src\\Link\\Link.js":"7","D:\\projet web\\tp_react\\src\\GetCity\\GetCity.js":"8","D:\\projet web\\tp_react\\src\\ShowWeatherData\\ShowWeatherData.js":"9","D:\\projet web\\tp_react\\src\\WeatherCallAPI\\WeatherCallAPI.js":"10","D:\\projet web\\tp_react\\src\\WeatherPage\\WeatherPage.js":"11","D:\\projet web\\tp_react\\src\\Input\\Input.js":"12","D:\\projet web\\tp_react\\src\\CityPage\\CityPage.js":"13"},{"size":500,"mtime":1606461377163,"results":"14","hashOfConfig":"15"},{"size":1215,"mtime":1610195950144,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1606461377163,"results":"17","hashOfConfig":"15"},{"size":1485,"mtime":1610356484204,"results":"18","hashOfConfig":"15"},{"size":1018,"mtime":1610147687521,"results":"19","hashOfConfig":"15"},{"size":567,"mtime":1608914582781,"results":"20","hashOfConfig":"15"},{"size":490,"mtime":1610143534083,"results":"21","hashOfConfig":"15"},{"size":512,"mtime":1610192687119,"results":"22","hashOfConfig":"15"},{"size":380,"mtime":1610231353222,"results":"23","hashOfConfig":"15"},{"size":657,"mtime":1610230515124,"results":"24","hashOfConfig":"15"},{"size":1912,"mtime":1610230994523,"results":"25","hashOfConfig":"15"},{"size":1840,"mtime":1610356421416,"results":"26","hashOfConfig":"15"},{"size":2256,"mtime":1610231248014,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1xmu59g",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"D:\\projet web\\tp_react\\src\\index.js",[],["60","61"],"D:\\projet web\\tp_react\\src\\App.js",[],"D:\\projet web\\tp_react\\src\\reportWebVitals.js",[],"D:\\projet web\\tp_react\\src\\DisplayListCities\\DisplayListCities.js",["62"],"D:\\projet web\\tp_react\\src\\Home\\Home.js",[],"D:\\projet web\\tp_react\\src\\Routeur\\Routeur.js",[],"D:\\projet web\\tp_react\\src\\Link\\Link.js",[],"D:\\projet web\\tp_react\\src\\GetCity\\GetCity.js",["63"],"import { useEffect } from \"react\";\r\n\r\nexport default function GetCity (props) {\r\n    useEffect( () => {\r\n        let isLast = true;\r\n        const fetchData = () => {\r\n            fetch(`https://geo.api.gouv.fr/communes?nom=${props.nameCity}&limit=5`)\r\n            .then(response => response.json())\r\n            .then(data => props.setApiListCities(data) && isLast )\r\n        }\r\n        fetchData();\r\n        return () => {\r\n            isLast = false;\r\n        }\r\n    }, [props.nameCity]);\r\n    return null;\r\n}","D:\\projet web\\tp_react\\src\\ShowWeatherData\\ShowWeatherData.js",["64"],"export default function ShowWeatherdata ({weatherData}) {\r\n    return (\r\n        <>\r\n            <div className=\"ml-3 mt-3\">\r\n                <h1>{weatherData.name}</h1>\r\n                <p>{weatherData.weather[0].description}</p>\r\n                <img src={\"http://openweathermap.org/img/w/\"+weatherData.weather[0].icon+\".png\"} ></img>\r\n            </div>\r\n        </>\r\n    );\r\n}","D:\\projet web\\tp_react\\src\\WeatherCallAPI\\WeatherCallAPI.js",["65"],"import { useEffect } from \"react\";\r\n\r\nexport default function WeatherCallAPI (props) {\r\n    useEffect( () => {\r\n        let isLast = true;\r\n        const fetchData = () => {\r\n            if (props.nameCity.length > 3)\r\n            {\r\n                fetch(`http://api.openweathermap.org/data/2.5/weather?q=${props.nameCity}&appid=ad1bac7166d226fd01509c4a9dc9d6d6&lang=fr`)\r\n                .then(response => response.json())\r\n                .then(data => props.setApiWeatherData(data) && isLast )\r\n            }\r\n        }\r\n        fetchData();\r\n        return () => {\r\n            isLast = false;\r\n        }\r\n    }, [props.nameCity]);\r\n    return null;\r\n}","D:\\projet web\\tp_react\\src\\WeatherPage\\WeatherPage.js",["66","67"],"import Link from \"./../Link/Link\";\r\nimport Input from \"./../Input/Input\";\r\nimport GetCity from \"./../GetCity/GetCity\";\r\nimport WeatherCallAPI from \"./../WeatherCallAPI/WeatherCallAPI\";\r\nimport DisplayListCities from \"./../DisplayListCities/DisplayListCities\";\r\nimport ShowWeatherdata from './../ShowWeatherData/ShowWeatherData';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nexport default function WeatherPage ({setApiNameCity, apiNameCity, apiListCities, setApiListCities}) {\r\n    const [apiWeatherData, setApiWeatherData] = useState([]);\r\n    useEffect(() => {},[apiWeatherData]);\r\n      \r\n    function DisplayWeatherData () {\r\n      const city = document.getElementById(\"inputCityName\");\r\n      if (city != null && \r\n          city.value != \"\" && \r\n          window.getComputedStyle(document.getElementById(\"listCities\")).display == \"none\" && \r\n          typeof apiWeatherData.length === \"undefined\" && \r\n          apiWeatherData.weather[0] !== \"undefined\"\r\n          )\r\n      {\r\n        return <ShowWeatherdata weatherData={apiWeatherData} />\r\n      }\r\n      return null;\r\n    }\r\n      \r\n    return (\r\n      <>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={6}>\r\n            <Link href=\"/site/cityData\" className=\"mb-3 ml-3\">\r\n              Info sur une ville de France.\r\n            </Link>\r\n            <Col>\r\n              <Input apiNameCity={apiNameCity} setApiNameCity={setApiNameCity} />\r\n            </Col>\r\n            <DisplayListCities apiListCities={apiListCities} setApiNameCity={setApiNameCity} className=\"mb-3\" />\r\n            <GetCity nameCity={apiNameCity} setApiListCities={setApiListCities}/>\r\n            <WeatherCallAPI nameCity={apiNameCity} setApiWeatherData={setApiWeatherData} />\r\n            <DisplayWeatherData />\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    )\r\n}","D:\\projet web\\tp_react\\src\\Input\\Input.js",[],"D:\\projet web\\tp_react\\src\\CityPage\\CityPage.js",["68","69","70"],"import Link from \"./../Link/Link\";\r\nimport GetCity from \"./../GetCity/GetCity\";\r\nimport DisplayListCities from \"./../DisplayListCities/DisplayListCities\";\r\nimport Input from \"./../Input/Input\";\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport { useEffect } from 'react';\r\n\r\nexport default function CityPage ({setApiNameCity, apiNameCity, apiListCities, setApiListCities}) {\r\n    useEffect(()=> {}, [apiNameCity]);\r\n\r\n    function CityData ({data}) {\r\n        return (\r\n            <>\r\n                <div className=\"mt-5\">\r\n                    <p className=\"mb-2\">Ville : {data.nom}</p>\r\n                    <p className=\"mb-2\">Code du département : {data.codeDepartement}</p>\r\n                    <p className=\"mb-2\">code de la région : {data.codeRegion}</p>\r\n                    <p className=\"mb-2\">population : {data.population} habitants</p>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    function DisplayCityData () {\r\n        const city = document.getElementById(\"inputCityName\");\r\n        if (city != null && city.value != \"\" && window.getComputedStyle(document.getElementById(\"listCities\")).display == \"none\")\r\n        {\r\n            return(\r\n                <>\r\n                    <div className=\"ml-3 mt-3\">\r\n                        {apiListCities.map( (element) => (element.nom.toLowerCase() == city.value.toLowerCase() ? <CityData data={element}/> : null))}\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={6}>\r\n                    <Link href=\"/site/cityWeather\" className=\"mb-3 ml-3\">\r\n                        météo aujourd'hui\r\n                    </Link>\r\n                    <Col>\r\n                        <Input apiNameCity={apiNameCity} setApiNameCity={setApiNameCity} />\r\n                    </Col>\r\n                    <DisplayListCities apiListCities={apiListCities} setApiNameCity={setApiNameCity} />\r\n                    <GetCity nameCity={apiNameCity} setApiListCities={setApiListCities}/>\r\n                    <DisplayCityData />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":28,"column":9,"nodeType":"77","messageId":"78","endLine":28,"endColumn":60},{"ruleId":"79","severity":1,"message":"80","line":15,"column":8,"nodeType":"81","endLine":15,"endColumn":24,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":7,"column":17,"nodeType":"85","endLine":7,"endColumn":99},{"ruleId":"79","severity":1,"message":"80","line":18,"column":8,"nodeType":"81","endLine":18,"endColumn":24,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":20,"column":22,"nodeType":"89","messageId":"90","endLine":20,"endColumn":24},{"ruleId":"87","severity":1,"message":"91","line":21,"column":82,"nodeType":"89","messageId":"90","endLine":21,"endColumn":84},{"ruleId":"87","severity":1,"message":"88","line":29,"column":40,"nodeType":"89","messageId":"90","endLine":29,"endColumn":42},{"ruleId":"87","severity":1,"message":"91","line":29,"column":120,"nodeType":"89","messageId":"90","endLine":29,"endColumn":122},{"ruleId":"87","severity":1,"message":"91","line":34,"column":85,"nodeType":"89","messageId":"90","endLine":34,"endColumn":87},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["94"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["95"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"96","fix":"98"},"Update the dependencies array to be: [props, props.nameCity]",{"range":"99","text":"100"},{"range":"101","text":"100"},[473,489],"[props, props.nameCity]",[618,634]]